const express = require('express');
const jwt = require('jsonwebtoken');
const router = express.Router();

// Clave secreta (idealmente almacenada en una variable de entorno)
const SECRET_KEY = process.env.JWT_SECRET || 'miClaveSecreta';

// Modelo de usuario (ajústalo según tu modelo real)
const User = require('../models/User');

// Ruta de login
router.post('/', async (req, res) => {
    const { username, password } = req.body;

    try {
        // Verificar si el usuario existe
        const user = await User.findOne({ username });
        if (!user) {
            return res.status(401).json({ message: 'Usuario no encontrado' });
        }

        // Verificar contraseña
        const isPasswordValid = await user.isCorrectPassword(password); // Método definido en el modelo
        if (!isPasswordValid) {
            return res.status(401).json({ message: 'Contraseña incorrecta' });
        }

        // Crear token
        const token = jwt.sign(
            { id: user._id, username: user.username, role: user.role },
            SECRET_KEY,
            { expiresIn: '1h' } // Token válido por 1 hora
        );

        res.json({ message: 'Login exitoso', token });
    } catch (error) {
        console.error(error);
        res.status(500).json({ message: 'Error en el servidor', error });
    }
});

module.exports = router;